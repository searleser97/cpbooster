"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5235],{3028:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"configuration","title":"Configuration","description":"Creating Your First Configuration File","source":"@site/docs/configuration.mdx","sourceDirName":".","slug":"/configuration","permalink":"/cpbooster/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/master/website/docs/configuration.mdx","tags":[],"version":"current","frontMatter":{"id":"configuration","title":"Configuration"},"sidebar":"docs","previous":{"title":"Installation","permalink":"/cpbooster/docs/installation"},"next":{"title":"Clone Contest","permalink":"/cpbooster/docs/clone"}}');var s=o(4848),t=o(8453);const r={id:"configuration",title:"Configuration"},l=void 0,c={},d=[{value:"Creating Your First Configuration File",id:"creating-your-first-configuration-file",level:2},{value:"Configuration File Example",id:"configuration-file-example",level:2},{value:"<code>cpbooster-config.json</code>",id:"cpbooster-configjson",level:4},{value:"Fields Description",id:"fields-description",level:2},{value:"<code>contestsDirectory: string</code>",id:"contestsdirectory-string",level:3},{value:"<code>port: number</code>",id:"port-number",level:3},{value:"<code>editor: string</code>",id:"editor-string",level:3},{value:"Editor Requirements",id:"editor-requirements",level:4},{value:"Examples",id:"examples",level:4},{value:"List of supported terminals",id:"list-of-supported-terminals",level:4},{value:"<code>closeAfterClone: boolean</code>",id:"closeafterclone-boolean",level:3},{value:"<code>showStatusPageOnSubmit: boolean</code>",id:"showstatuspageonsubmit-boolean",level:3},{value:"<code>useUserDefaultBrowser: boolean</code>",id:"useuserdefaultbrowser-boolean",level:3},{value:"<code>preferredLang: string</code>",id:"preferredlang-string",level:3},{value:"<code>hideTestCaseInput: boolean</code>",id:"hidetestcaseinput-boolean",level:3},{value:"<code>cloneInCurrentDir: boolean</code>",id:"cloneincurrentdir-boolean",level:3},{value:"<code>executableFileExtension: string</code>",id:"executablefileextension-string",level:3},{value:"<code>languages: Record&lt;LangExtension, LangConfig&gt;</code>",id:"languages-recordlangextension-langconfig",level:3},{value:"<code>languages.&lt;lang&gt;.template: string</code>",id:"languageslangtemplate-string",level:3},{value:"<code>languages.&lt;lang&gt;.command: string</code>",id:"languageslangcommand-string",level:3},{value:"<code>languages.&lt;lang&gt;.debugCommand: string</code>",id:"languageslangdebugcommand-string",level:3},{value:"<code>languages.&lt;lang&gt;.runCommand: string</code>",id:"languageslangruncommand-string",level:3},{value:"<code>languages.&lt;lang&gt;.aliases: Object&lt;OnlineJudgeName, string&gt;</code>",id:"languageslangaliases-objectonlinejudgename-string",level:3},{value:"<code>languages.&lt;lang&gt;.type: &quot;compiled&quot; | &quot;interpreted&quot; | &quot;mixed&quot;</code>",id:"languageslangtype-compiled--interpreted--mixed",level:3},{value:"<code>languages.&lt;lang&gt;.commentString: string</code>",id:"languageslangcommentstring-string",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"creating-your-first-configuration-file",children:"Creating Your First Configuration File"}),"\n",(0,s.jsx)(n.p,{children:"Execute the following command to create a configuration file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cpbooster init\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This command will create a file called ",(0,s.jsx)(n.code,{children:"cpbooster-config.json"})," in your ",(0,s.jsx)(n.strong,{children:"$HOME"})," directory with default values.\nIf you wish to create your configuration file somewhere else you can specify the path using ",(0,s.jsx)(n.code,{children:"--configPath"})," flag\neach time you run a command."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["By default ",(0,s.jsx)(n.code,{children:"cpbooster"})," looks for the configuration file in any of the following directories"]}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$HOME/cpbooster-config.json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$HOME/.cpbooster/cpbooster-config.json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$HOME/.config/cpbooster/cpbooster-config.json"})}),"\n"]}),(0,s.jsxs)(n.p,{children:["Take a look at ",(0,s.jsx)(n.a,{href:"https://github.com/searleser97/cpbooster/issues/7",children:(0,s.jsx)(n.strong,{children:"this issue"})}),"\nfor context."]})]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-file-example",children:"Configuration File Example"}),"\n",(0,s.jsx)(n.h4,{id:"cpbooster-configjson",children:(0,s.jsx)(n.code,{children:"cpbooster-config.json"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "contestsDirectory": "/home/user/Contests",\n  "port": 1327,\n  "editor": "konsole",\n  "closeAfterClone": false,\n  "showStatusPageOnSubmit": true,\n  "useUserDefaultBrowser": true,\n  "preferredLang": "cpp",\n  "hideTestCaseInput": false,\n  "cloneInCurrentDir": false,\n  "executableFileExtension": "exe",\n  "languages": {\n    "cpp": {\n      "template": "template.cpp",\n      "command": "g++ -std=gnu++17 -O2",\n      "debugCommand": "g++ -std=gnu++17 -DDEBUG -Wshadow -Wall",\n      "aliases": {\n        "codeforces": "54",\n        "atcoder": "4003",\n        "omegaup": "cpp17-gcc"\n      },\n      "type": "compiled",\n      "commentString": "//"\n    },\n    "py": {\n      "template": "template.py",\n      "command": "python3",\n      "debugCommand": "python3 -O",\n      "aliases": {\n        "codeforces": "31",\n        "atcoder": "4006",\n        "omegaup": "py3"\n      },\n      "type": "interpreted",\n      "commentString": "#"\n    },\n    "java": {\n      "template": "",\n      "command": "javac",\n      "debugCommand": "javac",\n      "runCommand": "java",\n      "aliases": {\n        "codeforces": "36",\n        "atcoder": "4005",\n        "omegaup": "java"\n      },\n      "type": "mixed",\n      "commentString": "//"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"fields-description",children:"Fields Description"}),"\n",(0,s.jsx)(n.h3,{id:"contestsdirectory-string",children:(0,s.jsx)(n.code,{children:"contestsDirectory: string"})}),"\n",(0,s.jsxs)(n.p,{children:["The path to the directory where contests folders will be created when you run ",(0,s.jsx)(n.code,{children:"cpb clone"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The directory of a user that has cloned 3 contests would look like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"$ cd path/to/contests/directory\n$ tree -L 1\n.\n\u251c\u2500\u2500 AtCoder-AtCoderBeginnerContest194\n\u251c\u2500\u2500 AtCoder-AtCoderRegularContest113\n\u2514\u2500\u2500 Codeforces-CodeforcesRound665Div.2\n"})}),"\n",(0,s.jsx)(n.h3,{id:"port-number",children:(0,s.jsx)(n.code,{children:"port: number"})}),"\n",(0,s.jsxs)(n.p,{children:["Specifies the ",(0,s.jsx)(n.strong,{children:"port"})," where ",(0,s.jsx)(n.a,{href:"https://github.com/jmerle/competitive-companion",children:"competitive companion extension"})," will send problem's data.\n",(0,s.jsx)(n.strong,{children:"1327"})," is the default port for ",(0,s.jsx)(n.code,{children:"cpbooster"})," in competitive companion so, if you don't change\nthe port, it will just work as expected. If you must change it, then be sure that you also\nchange it in competitive companion extension settings."]}),"\n",(0,s.jsx)(n.h3,{id:"editor-string",children:(0,s.jsx)(n.code,{children:"editor: string"})}),"\n",(0,s.jsxs)(n.p,{children:["Name of the ",(0,s.jsx)(n.strong,{children:"editor"})," that will be opened after running ",(0,s.jsx)(n.code,{children:"cpb clone"}),".\nThe ",(0,s.jsx)(n.strong,{children:"editor"})," value should match with the terminal command you use to launch it. See ",(0,s.jsx)(n.a,{href:"#editor-requirements",children:"Editor Requirements"})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.strong,{children:"editor"})," can be a ",(0,s.jsx)(n.a,{href:"#list-of-supported-terminals",children:"terminal emulator"})," also."]})}),"\n",(0,s.jsx)(n.h4,{id:"editor-requirements",children:"Editor Requirements"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["You must be able to open your ",(0,s.jsx)(n.strong,{children:"editor"})," using a terminal command."]}),"\n",(0,s.jsxs)(n.li,{children:["If the ",(0,s.jsx)(n.strong,{children:"editor"})," is a ",(0,s.jsx)(n.strong,{children:"terminal emulator"})," it should be in the ",(0,s.jsx)(n.a,{href:"#list-of-supported-terminals",children:"list of supported terminals"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["If the ",(0,s.jsx)(n.strong,{children:"editor"})," is NOT a ",(0,s.jsx)(n.strong,{children:"terminal emulator"}),". The ",(0,s.jsx)(n.strong,{children:"editor command"})," should support the following format to open a directory:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ editor [directory]\n"})}),"\n",(0,s.jsxs)(n.p,{children:['If your editor does not support this format but has another way to open a directory, you could take a look at\n"',(0,s.jsx)(n.a,{href:"/docs/add-editor-support",children:"How to add an editor"}),'"']}),"\n",(0,s.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Using ",(0,s.jsx)(n.strong,{children:"regular editor"})," ( ",(0,s.jsx)(n.em,{children:"VSCode"})," ):"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "editor": "code"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["since ",(0,s.jsx)(n.code,{children:"code"})," is the command that is used to execute ",(0,s.jsx)(n.em,{children:"vscode"})," from the terminal."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Using ",(0,s.jsx)(n.strong,{children:"terminal emulator"})," ( ",(0,s.jsx)(n.em,{children:"konsole"})," ):"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "editor": "konsole"\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Terminal Emulator"})," support is currently limited to this ",(0,s.jsx)(n.a,{href:"#list-of-supported-terminals",children:"List of supported terminals"}),'.\nVisit the section "',(0,s.jsx)(n.a,{href:"/docs/add-editor-support",children:"How to add an editor"}),'" if you wish to contribute and add support\nfor other terminal emulators.']})}),"\n",(0,s.jsx)(n.h4,{id:"list-of-supported-terminals",children:"List of supported terminals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"konsole"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"xterm"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"gnome-terminal"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"deepin-terminal"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"kitty"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"alacritty"'})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'"terminal"'})," (MacOS)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"closeafterclone-boolean",children:(0,s.jsx)(n.code,{children:"closeAfterClone: boolean"})}),"\n",(0,s.jsxs)(n.p,{children:["Whether to close the terminal after the execution of ",(0,s.jsx)(n.code,{children:"cpb clone"})," or not."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["When using this option as ",(0,s.jsx)(n.code,{children:"true"})," verify that your ",(0,s.jsx)(n.a,{href:"#editor-string",children:(0,s.jsx)(n.strong,{children:"editor"})})," satisfies the ",(0,s.jsx)(n.a,{href:"#editor-requirements",children:"Editor Requirements"}),", otherwise,\nyou might end up with your terminal closed and no editor opened."]})}),"\n",(0,s.jsx)(n.h3,{id:"showstatuspageonsubmit-boolean",children:(0,s.jsx)(n.code,{children:"showStatusPageOnSubmit: boolean"})}),"\n",(0,s.jsxs)(n.p,{children:["Whether to open a browser window in the submission status page or not, after running ",(0,s.jsx)(n.code,{children:"cpb submit"})]}),"\n",(0,s.jsx)(n.h3,{id:"useuserdefaultbrowser-boolean",children:(0,s.jsx)(n.code,{children:"useUserDefaultBrowser: boolean"})}),"\n",(0,s.jsxs)(n.p,{children:["Whether to open the status page using default browser or the one bundled with ",(0,s.jsx)(n.code,{children:"cpbooster"}),".\nSee ",(0,s.jsx)(n.a,{href:"/docs/submit#requirements",children:"Submit Requirements"})]}),"\n",(0,s.jsx)(n.h3,{id:"preferredlang-string",children:(0,s.jsx)(n.code,{children:"preferredLang: string"})}),"\n",(0,s.jsxs)(n.p,{children:["The extension name in lowercase of your preferred language. ( i.e. ",(0,s.jsx)(n.code,{children:'"cpp"'}),", ",(0,s.jsx)(n.code,{children:'"py"'}),", ",(0,s.jsx)(n.code,{children:'"java"'}),", ... ),\n",(0,s.jsx)(n.code,{children:"cpb clone"})," uses this value to create corresponding source files with the template of your\npreferred language."]}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsx)(n.p,{children:"This value must match exactly (case-sensitive) with the extension used in the source files."})}),"\n",(0,s.jsx)(n.h3,{id:"hidetestcaseinput-boolean",children:(0,s.jsx)(n.code,{children:"hideTestCaseInput: boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Whether or not to show the test case input when testing"}),"\n",(0,s.jsx)(n.h3,{id:"cloneincurrentdir-boolean",children:(0,s.jsx)(n.code,{children:"cloneInCurrentDir: boolean"})}),"\n",(0,s.jsxs)(n.p,{children:["When true it clones contests or single problems in current directory instead\nof the global ",(0,s.jsx)(n.a,{href:"#contestsdirectory-string",children:"contest directory"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"executablefileextension-string",children:(0,s.jsx)(n.code,{children:"executableFileExtension: string"})}),"\n",(0,s.jsx)(n.p,{children:"The preferred file extension for the compiled binary."}),"\n",(0,s.jsx)(n.h3,{id:"languages-recordlangextension-langconfig",children:(0,s.jsx)(n.code,{children:"languages: Record<LangExtension, LangConfig>"})}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"languages"})," you can configure the settings of each programming language."]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"cpbooster"})," officially supports the following languages:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"c"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"c++"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"rust"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"go"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"python"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"javascript"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ruby"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"java"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"kotlin"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"scala"})}),"\n"]}),(0,s.jsxs)(n.p,{children:["officially supporting these languages means that they were tested exhaustively, however,\n",(0,s.jsx)(n.strong,{children:"other languages might be supported as well"})," due to the generality of the algorithm used to parse the commands\nto compile or run. In case ",(0,s.jsx)(n.code,{children:"cpbooster"})," can't work correctly with the language you wish to use,\nvisit the section \"",(0,s.jsx)(n.a,{href:"/docs/add-language-support",children:"How to add a language"}),'" which will guide you on how to contribute\nto the project.']})]}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:["The keys (",(0,s.jsx)(n.code,{children:"<lang>"}),") must match exactly (case-sensitive) with the extension used in the source files.\ni.e. if you use ",(0,s.jsx)(n.code,{children:"cpp"})," extension for your ",(0,s.jsx)(n.code,{children:"c++"})," programs then you must use ",(0,s.jsx)(n.code,{children:"cpp"})," as key\nof the json object, ",(0,s.jsx)(n.code,{children:"CPP"})," won't work, neither ",(0,s.jsx)(n.code,{children:"Cpp"})," nor ",(0,s.jsx)(n.code,{children:"cPP"}),", ... and the same applies\nfor the languages"]})}),"\n",(0,s.jsx)(n.h3,{id:"languageslangtemplate-string",children:(0,s.jsx)(n.code,{children:"languages.<lang>.template: string"})}),"\n",(0,s.jsxs)(n.p,{children:["Path to your competitive programming template for the corresponding ",(0,s.jsx)(n.code,{children:"<lang>"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here are some examples of competitive programming templates (if you wish, you can download them and use them):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://gitlab.com/searleser97/competitive-programming-reference/-/blob/master/Reference/Coding%20Resources/C++/Competitive%20Programming%20Template.cpp",children:"CompetitiveProgrammingTemplate.cpp"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This template allows you to print anything like in python with a ",(0,s.jsx)(n.code,{children:"debug"})," function that just works when ",(0,s.jsx)(n.code,{children:"debugCommand"})," is used. See ",(0,s.jsx)(n.a,{href:"/docs/debug",children:"Debug"})," section."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://gitlab.com/searleser97/competitive-programming-reference/-/blob/master/Reference/Coding%20Resources/Python/Competitive%20Programming%20Template.py",children:"CompetitiveProgrammingTemplate.py"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This template includes Fast IO operations for python"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"languageslangcommand-string",children:(0,s.jsx)(n.code,{children:"languages.<lang>.command: string"})}),"\n",(0,s.jsxs)(n.p,{children:["The command that will be used to compile\n(",(0,s.jsxs)(n.a,{href:"#languageslangtype-compiled--interpreted--mixed",children:[(0,s.jsx)(n.code,{children:"compiled"})," or ",(0,s.jsx)(n.code,{children:"mixed"})," languages"]}),")\nor run (",(0,s.jsxs)(n.a,{href:"#languageslangtype-compiled--interpreted--mixed",children:[(0,s.jsx)(n.code,{children:"interpreted"})," languages"]}),") your program for testing purposes."]}),"\n",(0,s.jsx)(n.p,{children:"For example: If you use codeforces it is convenient that you use the same command they use for each language"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "languages": {\n    "cpp": {\n      "command": "g++ -std=gnu++17 -O2"\n    },\n    "py": {\n      "command": "python3"\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["If you specify the name of the executable file in this command, it will\nbe used instead of the default name (same as source file). See ",(0,s.jsx)(n.a,{href:"/docs/test",children:(0,s.jsx)(n.strong,{children:"Test"})})," section."]}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example:"})," In ",(0,s.jsx)(n.code,{children:"C++"})," you can use the ",(0,s.jsx)(n.code,{children:"-o"})," flag to specify the name of the executable file that will be created after compilation."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "languages": {\n    "cpp": {\n      "command": "g++ -std=gnu++17 -o executableName.exe"\n    }\n  }\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"languageslangdebugcommand-string",children:(0,s.jsx)(n.code,{children:"languages.<lang>.debugCommand: string"})}),"\n",(0,s.jsxs)(n.p,{children:["The command that will be used to compile\n(",(0,s.jsxs)(n.a,{href:"#languageslangtype-compiled--interpreted--mixed",children:[(0,s.jsx)(n.code,{children:"compiled"})," or ",(0,s.jsx)(n.code,{children:"mixed"})," languages"]}),") or run\n(",(0,s.jsxs)(n.a,{href:"#languageslangtype-compiled--interpreted--mixed",children:[(0,s.jsx)(n.code,{children:"interpreted"})," languages"]}),") your program for debugging purposes.\nUsually ",(0,s.jsx)(n.code,{children:"debugCommand"})," has more flags than ",(0,s.jsx)(n.code,{children:"command"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Some debug command examples for ",(0,s.jsx)(n.code,{children:"cpp"})," and ",(0,s.jsx)(n.code,{children:"py"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "languages": {\n    "cpp": {\n      "command": "g++ -std=gnu++17 -O2",\n      "debugCommand": "g++ -std=gnu++17 -O3 -DDEBUG -Wshadow -Wall"\n    },\n    "py": {\n      "command": "python3",\n      "debugCommand": "python3 -O"\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["You can specify the name of the executable file in the same way you would do it\nin ",(0,s.jsx)("a",{href:"#languageslangcommand-string",style:{color:"white"},children:(0,s.jsx)(n.code,{children:"languages.<lang>.command"})}),"."]}),(0,s.jsxs)(n.p,{children:["Visit the ",(0,s.jsx)(n.a,{href:"/docs/debug",children:(0,s.jsx)(n.strong,{children:"Debug"})})," section to see usage examples of this feature."]})]}),"\n",(0,s.jsx)(n.h3,{id:"languageslangruncommand-string",children:(0,s.jsx)(n.code,{children:"languages.<lang>.runCommand: string"})}),"\n",(0,s.jsxs)(n.p,{children:["The command that will be used to run ",(0,s.jsx)(n.a,{href:"#languageslangtype-compiled--interpreted--mixed",children:(0,s.jsx)(n.code,{children:"mixed"})}),"\ntype languages like (java, kotlin, scala, ...)."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This type of languages are compiled with some command (i.e. javac, kotlinc, scalac, ...) but\nthey get run with a different one (java, kotlin, scala, ...)"})}),"\n",(0,s.jsx)(n.h3,{id:"languageslangaliases-objectonlinejudgename-string",children:(0,s.jsx)(n.code,{children:"languages.<lang>.aliases: Object<OnlineJudgeName, string>"})}),"\n",(0,s.jsxs)(n.p,{children:['Language "aliases" for each OnlineJudge. See ',(0,s.jsx)(n.a,{href:"/docs/submit#how-to-configure-language-aliases",children:"How To Configure Language Aliases"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example: the alias for ",(0,s.jsx)(n.code,{children:"C++"})," in Codeforces and AtCoder is ",(0,s.jsx)(n.code,{children:'"54"'})," and ",(0,s.jsx)(n.code,{children:'"4006"'})," respectively"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "languages": {\n    "cpp": {\n      "aliases": {\n        "codeforces": "54",\n        "atcoder": "4006"\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"languageslangtype-compiled--interpreted--mixed",children:(0,s.jsx)(n.code,{children:'languages.<lang>.type: "compiled" | "interpreted" | "mixed"'})}),"\n",(0,s.jsxs)(n.p,{children:["Specifies whether the language is ",(0,s.jsx)(n.code,{children:'"compiled"'})," (",(0,s.jsx)(n.code,{children:"C++"}),", ",(0,s.jsx)(n.code,{children:"go"}),", ",(0,s.jsx)(n.code,{children:"rust"}),", ",(0,s.jsx)(n.code,{children:"C#"}),"),\n",(0,s.jsx)(n.code,{children:'"interpreted"'})," (",(0,s.jsx)(n.code,{children:"python"}),", ",(0,s.jsx)(n.code,{children:"javascript"}),", ",(0,s.jsx)(n.code,{children:"ruby"}),", ...) or ",(0,s.jsx)(n.code,{children:'"mixed"'})," (",(0,s.jsx)(n.code,{children:"java"}),", ",(0,s.jsx)(n.code,{children:"kotlin"}),", ",(0,s.jsx)(n.code,{children:"scala"}),", ...).\n",(0,s.jsx)(n.code,{children:"cpbooster"})," is aware that some languages can be ",(0,s.jsx)(n.code,{children:"interpreted"})," as well as ",(0,s.jsx)(n.code,{children:"compiled"}),",\nlike ",(0,s.jsx)(n.code,{children:"python"})," which can be compiled with ",(0,s.jsx)(n.a,{href:"https://github.com/Nuitka/Nuitka",children:"nuitka"})," or ",(0,s.jsx)(n.code,{children:"javascript"})," which\ncan be compiled with ",(0,s.jsx)(n.a,{href:"https://github.com/NectarJS/nectarjs",children:"nectarjs"}),".\nWith this option you have the chance to tell ",(0,s.jsx)(n.code,{children:"cpbooster"})," how to work with\nthe language you provide. For a definition of ",(0,s.jsx)(n.code,{children:"mixed"})," languages, See ",(0,s.jsx)(n.a,{href:"add-language-support#mixed",children:"Mixed Languages"})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["In case this option is not provided, then ",(0,s.jsx)(n.code,{children:"cpbooster"})," will try to infer the type\ndepending on the language. But consider that ",(0,s.jsx)(n.code,{children:"cpbooster"})," is not aware of all the languages\nit actually support, specifying this option reduces the risk of unexpected errors.\nSee ",(0,s.jsx)(n.a,{href:"#languages-recordlangextension-langconfig",children:"Languages Support"})]})}),"\n",(0,s.jsx)(n.h3,{id:"languageslangcommentstring-string",children:(0,s.jsx)(n.code,{children:"languages.<lang>.commentString: string"})}),"\n",(0,s.jsxs)(n.p,{children:["Tells ",(0,s.jsx)(n.code,{children:"cpbooster"})," which comment string to use depending on the language.\n",(0,s.jsx)(n.code,{children:"cpbooster"})," uses a generic algorithm to support a great variety of languages,\nsome of them are know by ",(0,s.jsx)(n.code,{children:"cpbooster"})," but some others are unknown for it,\ntherefore ",(0,s.jsx)(n.code,{children:"cpbooster"})," might not know how to write comments in that language."]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"Comments are used to write information in the source code file such as:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"time-limit"}),"\n",(0,s.jsx)(n.li,{children:"problem-url"}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var i=o(6540);const s={},t=i.createContext(s);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);